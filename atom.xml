<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>宁静致远</title>
  <subtitle>Knowledge is a good thing, and good things are worth spreading!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://colyfu.com/"/>
  <updated>2017-04-26T09:11:07.000Z</updated>
  <id>http://colyfu.com/</id>
  
  <author>
    <name>Coly Fu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>判断fastq文件质量编码格式及Phred64转Phred33方法</title>
    <link href="http://colyfu.com/QC/fastq-phred-trans.html"/>
    <id>http://colyfu.com/QC/fastq-phred-trans.html</id>
    <published>2017-04-25T13:37:56.000Z</published>
    <updated>2017-04-26T09:11:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天有朋友从网上下载了一批fastq文件，为Phred64格式，分析之前没发现，比对的时候BWA报错了。很多人可能没有接触过老Illumina数据，不知道怎么判断编码格式，也不知道怎么转为Phred33格式，所以简单说明一下怎么判断fastq文件的质量编码方式以及怎么将Phred64编码格式转为Phred33编码格式。</p>
<a id="more"></a>
<ul>
<li><h3 id="Phred64-33质量编码格式区别"><a href="#Phred64-33质量编码格式区别" class="headerlink" title="Phred64/33质量编码格式区别"></a>Phred64/33质量编码格式区别</h3><p>fastq文件中，碱基质量是用ASCII字符表示。Phred64编码格式，碱基质量值为字符的十进制ASCII码减去64。同理，Phred33编码格式，碱基质量值为字符的十进制ASCII码减去33。一般碱基的质量值范围为[0, 41]，X ten之后，质量值只有(2,7,11,22,27,32,37,42)几个梯度。因此，GATK的BQSR过程对于X ten的数据可能更加重要。<br>Phred质量值Q和出错的概率P的关系为Q = -10*lg(P)，如碱基质量值为30，表示出错的概率为0.001，碱基质量值为20，表示出错的概率为0.01。<br>目前主流软件如BWA, GATK等都识别的是Phred33质量编码格式，如果为Phred64格式，则可能会报错，即使不报错，后续的分析也会有问题。因此，下载的数据如果不清楚编码格式，需要先判断，如果为Phred64，则需要转为Phred33格式。</p>
</li>
<li><h3 id="判断fastq文件质量值编码格式"><a href="#判断fastq文件质量值编码格式" class="headerlink" title="判断fastq文件质量值编码格式"></a>判断fastq文件质量值编码格式</h3><p>格式判断既可以通过肉眼快速判断，也可以使用<a href="http://onzjn6hm6.bkt.clouddn.com/CheckFqQualityCode.pl" target="_blank" rel="external">下面的脚本</a>进行判断。如果文件少，没有编程基础，可以用快速判断的方法。利用程序判断更加准确、快速、可批量处理，因此有编程基础的人，应该尽量使用程序判断。</p>
</li>
</ul>
<blockquote>
<p><strong>肉眼快速判断</strong>：质量字符有数字<code>[0~9]</code>的为Phred33，有小写字母<code>[a~z]</code>的为Phred64。<br><strong>通过程序</strong>：基本思路为将一定数量的reads质量值字符转为ASCII码，然后判断质量值的范围。<br><a href="http://onzjn6hm6.bkt.clouddn.com/CheckFqQualityCode.pl" target="_blank" rel="external">脚本</a>的使用方法如下，第一个参数为fastq文件，自动判断是否为压缩文件，第二个参数为用于判断的reads数，默认为1000。<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">perl CheckFqQualityCode.pl prefix.fq[.gz] [1000]</div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><h3 id="Phred64格式转Phred33格式"><a href="#Phred64格式转Phred33格式" class="headerlink" title="Phred64格式转Phred33格式"></a>Phred64格式转Phred33格式</h3>Phred64格式转Phred33格式的原理很简单，只需在原有ASCII码的基础上减去64再加上33既可。大家可以自己写，也可以使用lh写的<a href="https://github.com/lh3/seqtk" target="_blank" rel="external">seqtk</a>工具，使用命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">seqtk seq -VQ64 prefix.phred64.fq.gz | gzip &gt; prefix.phred33.fq.gz</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天有朋友从网上下载了一批fastq文件，为Phred64格式，分析之前没发现，比对的时候BWA报错了。很多人可能没有接触过老Illumina数据，不知道怎么判断编码格式，也不知道怎么转为Phred33格式，所以简单说明一下怎么判断fastq文件的质量编码方式以及怎么将Phred64编码格式转为Phred33编码格式。&lt;/p&gt;
    
    </summary>
    
      <category term="QC" scheme="http://colyfu.com/categories/QC/"/>
    
    
      <category term="fastq" scheme="http://colyfu.com/tags/fastq/"/>
    
      <category term="phred33" scheme="http://colyfu.com/tags/phred33/"/>
    
      <category term="phred64" scheme="http://colyfu.com/tags/phred64/"/>
    
      <category term="格式" scheme="http://colyfu.com/tags/%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>GWAS如何确定候选区间和causal gene</title>
    <link href="http://colyfu.com/GWAS/GWAS%E5%A6%82%E4%BD%95%E7%A1%AE%E5%AE%9A%E5%80%99%E9%80%89%E5%8C%BA%E9%97%B4%E5%92%8Ccausal-gene.html"/>
    <id>http://colyfu.com/GWAS/GWAS如何确定候选区间和causal-gene.html</id>
    <published>2017-04-09T12:33:37.000Z</published>
    <updated>2017-04-25T13:47:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着高通量测序成本的急剧下降，越来越多的GWAS研究通过全基因组重测序获得标记。全基因组重测序的高密度标记，使得通过GWAS研究快速找到causal gene甚至causal mutation成为可能。但是通过GWAS得到一个信号后，怎么确定与这个信号关联的基因呢？  </p>
<a id="more"></a>
<p>基本的思路就是找与这个信号强连锁的区域，一般来说r<sup>2</sup>大于0.6的区域视为强连锁的区域。简单粗糙的做法：我们可以通过群体的全基因组LD-decay分析，找到LD decay到r<sup>2</sup>等于0.6时所对应的距离，将GWAS超过阈值的信号前后各延伸这个距离作为候选区间。<br>但是基因组不同区域的连锁程度差异很大，上面一刀切的做法可能使我们漏掉一些基因，或者多调查许多关联性并不强的基因。而且很多作物的连锁性很强，导致候选基因很多，这样就大大增加了工作难度。下面介绍一个非常简单高效的方法（<a href="http://www.nature.com/ng/journal/v48/n8/abs/ng.3596.html" target="_blank" rel="external">参考文献</a>）。  </p>
<p align="center"><br>  <img src="http://onzjn6hm6.bkt.clouddn.com/20170409_heatmap.png" width="300"><br></p>

<ol>
<li><p>找到信号后，向前后延伸一段距离（可以根据全基因组的LD-decay水平大概估计），计算这段区域内所有标记pairwise r<sup>2</sup>，将r<sup>2</sup>大于0.6的block作为候选区间。pairwise r<sup>2</sup>可以用<a href="http://zzz.bwh.harvard.edu/plink/" target="_blank" rel="external">PLINK</a>计算：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">plink --noweb --bfile &lt;bfile_prefix&gt; \</div><div class="line">      --chr 5 --from-bp 13641890 --to-bp 17641890 \</div><div class="line">      --matrix --r2 --out &lt;out_prefix&gt;</div></pre></td></tr></table></figure>
<p>画图用R,输入文件为plink计算的到的r<sup>2</sup>矩阵，以及标记的位置:</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env Rscript</span></div><div class="line"><span class="keyword">library</span>(LDheatmap)</div><div class="line">argv &lt;- commandArgs(<span class="literal">TRUE</span>)</div><div class="line">ldmatrix &lt;- as.matrix(read.table(argv[<span class="number">1</span>],sep=<span class="string">' '</span>))</div><div class="line">pos &lt;- as.numeric(unlist(read.table(argv[<span class="number">2</span>], head=<span class="literal">FALSE</span>)))</div><div class="line">pdf(argv[<span class="number">3</span>])</div><div class="line">rgb.palette &lt;- colorRampPalette(rev(c(<span class="string">"yellow"</span>, <span class="string">"orange"</span>, <span class="string">"red"</span>)), space = <span class="string">"rgb"</span>)</div><div class="line">LDheatmap(ldmatrix, genetic.distances=pos, color=rgb.palette(<span class="number">100</span>), flip=<span class="literal">TRUE</span>)</div><div class="line">dev.off()</div></pre></td></tr></table></figure>
</li>
<li><p>将这个区域内的标记按照其对基因功能的影响程度分为5类：  </p>
<blockquote>
<p>1） 标记与性状显著关联（-log<sub>10</sub>P大于阈值），且该标记影响氨基酸编码，或者位于剪接位点；<br>2） 标记与性状显著关联，且位于基因起始密码子上游2 kb内；<br>3） 标记与性状显著关联，且位于基因内，除开1）和2）之外的标记<br>4） 标记与性状显著关联，位于基因间区<br>5） 标记与性状不显著关联  </p>
</blockquote>
</li>
</ol>
<p>然后，按照这5类的顺序，依次调查，一般来说，属于1）类的可能性很大，而且基因一般就几个，这样就大大减少了工作难度。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着高通量测序成本的急剧下降，越来越多的GWAS研究通过全基因组重测序获得标记。全基因组重测序的高密度标记，使得通过GWAS研究快速找到causal gene甚至causal mutation成为可能。但是通过GWAS得到一个信号后，怎么确定与这个信号关联的基因呢？  &lt;/p&gt;
    
    </summary>
    
      <category term="GWAS" scheme="http://colyfu.com/categories/GWAS/"/>
    
    
      <category term="GWAS" scheme="http://colyfu.com/tags/GWAS/"/>
    
      <category term="causal gene" scheme="http://colyfu.com/tags/causal-gene/"/>
    
      <category term="LD" scheme="http://colyfu.com/tags/LD/"/>
    
      <category term="heat map" scheme="http://colyfu.com/tags/heat-map/"/>
    
  </entry>
  
</feed>
